/*
 * Generated by dtrace(1M).
 */

#ifndef	_BENCHMARK_H
#define	_BENCHMARK_H

#include <unistd.h>

#ifdef	__cplusplus
extern "C" {
#endif

#define INSTR_STABILITY "___dtrace_stability$instr$v1$1_1_0_1_1_0_1_1_0_1_1_0_1_1_0"

#define INSTR_TYPEDEFS "___dtrace_typedefs$instr$v2"

#if !defined(DTRACE_PROBES_DISABLED) || !DTRACE_PROBES_DISABLED

#define	INSTR_BENCHMARK_BEGIN(arg0) \
do { \
	__asm__ volatile(".reference " INSTR_TYPEDEFS); \
	__dtrace_probe$instr$benchmark_begin$v1$63686172202a(arg0); \
	__asm__ volatile(".reference " INSTR_STABILITY); \
} while (0)
#define	INSTR_BENCHMARK_BEGIN_ENABLED() \
	({ int _r = __dtrace_isenabled$instr$benchmark_begin$v1(); \
		__asm__ volatile(""); \
		_r; })
#define	INSTR_BENCHMARK_END(arg0) \
do { \
	__asm__ volatile(".reference " INSTR_TYPEDEFS); \
	__dtrace_probe$instr$benchmark_end$v1$63686172202a(arg0); \
	__asm__ volatile(".reference " INSTR_STABILITY); \
} while (0)
#define	INSTR_BENCHMARK_END_ENABLED() \
	({ int _r = __dtrace_isenabled$instr$benchmark_end$v1(); \
		__asm__ volatile(""); \
		_r; })


extern void __dtrace_probe$instr$benchmark_begin$v1$63686172202a(const char *);
extern int __dtrace_isenabled$instr$benchmark_begin$v1(void);
extern void __dtrace_probe$instr$benchmark_end$v1$63686172202a(const char *);
extern int __dtrace_isenabled$instr$benchmark_end$v1(void);

#else

#define	INSTR_BENCHMARK_BEGIN(arg0) \
do { \
	} while (0)
#define	INSTR_BENCHMARK_BEGIN_ENABLED() (0)
#define	INSTR_BENCHMARK_END(arg0) \
do { \
	} while (0)
#define	INSTR_BENCHMARK_END_ENABLED() (0)

#endif /* !defined(DTRACE_PROBES_DISABLED) || !DTRACE_PROBES_DISABLED */


#ifdef	__cplusplus
}
#endif

#endif	/* _BENCHMARK_H */
